@model Model.EF.User

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

@section header {
    Update User
}

<h1

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    <hr />

    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div class="form-group">
                    @Html.LabelFor(m => m.UserName, new { @class = "control-label" })
                </div>
                <div class="form-group">
                    @Html.EditorFor(m => m.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label" })
                    </div>
                    @Html.PasswordFor(m => m.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                    @Html.EditorFor(m => m.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Email, new { @class = "control-label" })
                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Address, new { @class = "control-label" })
                    @Html.EditorFor(m => m.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Phone, new { @class = "control-label" })
                    @Html.EditorFor(m => m.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Status)
                    @Html.EditorFor(m => m.Status)
                    @Html.ValidationMessageFor(m => m.Status, "")
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Update" class="btn btn-default" />
                    </div>
                </div>
            </form>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
